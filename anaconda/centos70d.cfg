##################################################
install
##################################################
# start to install centos 7.0.1406
##################################################

# text installaion mode
text

#backup installation image url
#url --url=http://linux-ftp.jf.intel.com/pub/mirrors/centos/7.0.1406/os/x86_64
url --url=ftp://172.16.0.1/os/centos70
lang en_US.UTF-8
keyboard us
network --device eth0 --bootproto dhcp --gateway 172.16.0.1 --nameserver 10.248.2.1

#root passwd 123456
rootpw --iscrypted $6$uicFbbbBsSB8hLTL$c18L0LZpPJCg76l4XG8vRK0dOt2KNBwvQz9RPjc4I/TBs.a/a6FgOOMsmFZOuiC386h.TtHSJFcjeZT9L1L0g1
firewall --disabled
selinux --disabled
authconfig --enableshadow --enablemd5
timezone --utc Asia/Shanghai
bootloader --location=mbr

#disk allocation
################
zerombr
clearpart --all
part /boot --fstype=ext4 --size=500 --ondisk=sda
part / --fstype=ext4 --asprimary --size=1 --grow --ondisk=sda



##################################################
%packages
##################################################
# install pkg-groups & pkgs during installation
##################################################

# pkg groups
############
@base
@console-internet
@core
@debugging
@directory-client
@hardware-monitoring
@java-platform
@large-systems
@network-file-system-client
@performance
@perl-runtime
@virtualization-client
@virtualization-platform

# pkgs
######
pax
oddjob
sgpio
device-mapper-persistent-data
samba-winbind
certmonger
pam_krb5
krb5-workstation
perl-DBD-SQLite
%end


##################################################
%post
##################################################
# running scripts after installation
##################################################



########################
# intel network settings
########################

# sync time with gateway
########################
cat >> /etc/ntp.conf << EOF
server 172.16.0.1
EOF
#cat >> /etc/bashrc << EOF
#ntpdate 172.16.0.1
#EOF

# record configuration time
echo Start configuration at `date +%Y_%m_%d--%H:%M` >> /root/time.txt


# default hostname & gateway & dns-servers
##########################################
echo devstoop > /etc/hostname
cat >> /etc/sysconfig/network << EOF
HOSTNAME=devstoop
DNS1=10.248.2.1
DNS2=10.248.2.5
DNS3=10.239.27.228
EOF


# adding proxies urls for each bash user
########################################
echo '
export GIT_PROXY_COMMAND=/usr/bin/git-proxy
export proxyaddr=10.239.4.80
export proxyport=913
export http_proxy="http://$proxyaddr:$proxyport"
export https_proxy="https://$proxyaddr:$proxyport"
export ftp_proxy="ftp://$proxyaddr:$proxyport"
export socks_proxy="socks://$proxyaddr:$proxyport"
export no_proxy="localhost,*intel.com:913,172.16.0.0/16,10.0.0.0/8,127.0.0.0/8"
export HTTP_PROXY=$http_proxy
export HTTPS_PROXY=$https_proxy
export FTP_PROXY=$ftp_proxy
export SOCKS_PROXY=$socks_proxy
export NO_PROXY=$no_proxy
' >> /etc/bashrc

cat >> /etc/bashrc << EOF
alias sls='screen -x'
EOF

# git's proxy confs
###################

#script for git://
cat >> /usr/bin/git-proxy << EOF
#!/bin/sh
case $1 in
    *.intel.com|172.16.*|127.0.*|localhost|10.*)
        METHOD="-X connect"
    ;;
    *)
        METHOD="-X 5 -x proxy-shz.intel.com:1080"
    ;;
esac
/bin/nc.openbsd $METHOD $*
EOF

chmod +x /usr/bin/git-proxy

cat >> /etc/gitconfig << EOF
[core]
gitproxy=/usr/bin/git-proxy
EOF

# pip's conf
############
cat >> /etc/pip.conf << EOF
[global]
default-timeout = 60
respect-virtualenv = true
build = /tmp/.pip/build
download-cache = /tmp/.pip/cache
index_url = http://pypi.python.org/simple/

[install]
use-mirrors = true
mirrors = http://pypi.python.org
EOF

# yum's confs
#############
cat >> /etc/yum.conf << EOF
proxy=http://proxy-shz.intel.com:913
EOF

# disable gpgcheck
sed -i s/gpgcheck=1/gpgcheck=0/g /etc/yum.conf

# wget's
########
sed -i s/.yoyodyne.com:18023/-shz.intel.com:913/g /etc/wgetrc

# hosts
#######
# other confs
#############

# add ssh keys
##############
#########################
cat >> /etc/screenrc << EOF
caption always '%{=b cw}%-w%{=rb db}%>%n %t%{-}%+w%{-b}%< %{= kG}%-=%D %c%{-}'
shelltitle '$ |bash'
EOF


##########################
# add stack & hadoop users
##########################

# add user stack with devstack
##############################
groupadd stack
useradd -g stack -s /bin/bash -d /opt/stack -m stack
echo "stack ALL=(ALL) NOPASSWD: ALL" >> /etc/sudoers 
passwd stack --stdin << EOF
123456
EOF

# download devstack
###################
wget ftp://172.16.0.1/devstack.2015_08_03.tar.gz --no-proxy
tar xvzf devstack.2015_08_03.tar.gz -C /
chown stack:stack /opt/stack/ -R
rm -f devstack.2015_08_03.tar.gz

# add user hadoop with hadoop-2.6.0
###################################
groupadd hadoop
useradd -g hadoop -s /bin/bash -d /opt/hadoop -m hadoop
echo "hadoop ALL=(ALL) NOPASSWD: ALL" >> /etc/sudoers 
passwd hadoop --stdin << EOF
123456
EOF

# download hadoop-2.6.0
#######################
wget ftp://172.16.0.1/hadoop-2.6.0.tar.gz --no-proxy
tar xvzf hadoop-2.6.0.tar.gz -C /opt/hadoop/
chown hadoop:hadoop /opt/hadoop/ -R
rm -f hadoop-2.6.0.tar.gz

# fix x64 lib issue for hadoop
##############################
wget ftp://172.16.0.1/hadoop-native-64-2.6.0.tar --no-proxy
tar xvf hadoop-native-64-2.6.0.tar -C /opt/hadoop-2.6.0/lib/native/
rm -f hadoop-native-64-2.6.0.tar

###############################
# add third party repos & tools
###############################

# add repo rpmforge & epel
##########################
yum install -y http://pkgs.repoforge.org/rpmforge-release/rpmforge-release-0.5.3-1.el7.rf.x86_64.rpm
yum install -y http://mirrors.ustc.edu.cn/fedora/epel/epel-release-latest-7.noarch.rpm
rpm --import /etc/pki/rpm-gpg/RPM-GPG-KEY*
#yum clean all
#yum makecache
#yum update -y

# install other tools
yum install -y dstat agedu iperf

# script for changing hostname 
##############################
echo '#!/bin/bash 
hostname $1
echo $1 > /etc/hostname
#echo "127.0.0.1 $1" >> /etc/hosts 
sed -i s/HOSTNAME=.*/HOSTNAME=$1/g /etc/sysconfig/network 
' > /root/changehost.sh
chmod +x /root/changehost.sh

# script for adding proxies temporary
#####################################
echo '
#!/bin/bash

# Use script like this
#>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
# source /intel-pxy.sh proxy-ir.intel.com
# source /intel-pxy.sh proxy-ir.intel.com 912
#>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>

proxyaddr=$1
proxyport=$2
export GIT_PROXY_COMMAND=/usr/bin/git-proxy
export proxyaddr=${proxyaddr:-proxy-shz.intel.com}
export proxyport=${proxyport:-913}
export http_proxy="http://$proxyaddr:$proxyport"
export https_proxy="https://$proxyaddr:$proxyport"
export ftp_proxy="ftp://$proxyaddr:$proxyport"
export socks_proxy="socks://$proxyaddr:$proxyport"
export no_proxy="localhost,*intel.com:913,172.16.0.0/16,10.0.0.0/8,127.0.0.0/8"
export HTTP_PROXY=$http_proxy
export HTTPS_PROXY=$https_proxy
export FTP_PROXY=$ftp_proxy
export SOCKS_PROXY=$socks_proxy
export NO_PROXY=$no_proxy
' > /intel-pxy.sh
chmod +x /intel-pxy.sh


##########################
# record installation time
##########################

echo Finish configuration at `date +%Y_%m_%d--%H:%M` >> /root/time.txt

%end

reboot
